<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

  <bean id="userService" class="aop.service.impl.UserServiceImpl"/>
  <bean id="orderService" class="aop.service.impl.OrderServiceImpl"/>

  <!--定义 bean，将作为 Aspect 使用，我们需要处理的逻辑代码都在里面-->
  <bean id="logArgsAspect" class="aop.spring_2_schema.LogArgsAspect" />
  <bean id="logResultAspect" class="aop.spring_2_schema.LogResultAspect" />

  <aop:config>
    <!--下面这两个 Pointcut 是全局的，可以被所有的 Aspect 使用-->
    <!--这里示意了两种 Pointcut 配置-->
    <aop:pointcut id="logArgsPointcut" expression="execution(* aop.service.*.*(..))" />
    <aop:pointcut id="logResultPointcut" expression="aop.spring_2_schema.SystemArchitecture.businessService()" />

    <aop:aspect ref="logArgsAspect">
      <!--在这里也可以定义 Pointcut，不过这是局部的，不能被其他的 Aspect 使用-->
      <aop:pointcut id="internalPointcut"
        expression="aop.spring_2_schema.SystemArchitecture.businessService()" />
      <aop:before method="logArgs" pointcut-ref="internalPointcut" />
    </aop:aspect>

    <aop:aspect ref="logArgsAspect">
      <aop:before method="logArgs" pointcut-ref="logArgsPointcut" />
    </aop:aspect>

    <aop:aspect ref="logResultAspect">
      <aop:after-returning method="logResult" returning="result" pointcut-ref="logResultPointcut" />
    </aop:aspect>


  </aop:config>

</beans>